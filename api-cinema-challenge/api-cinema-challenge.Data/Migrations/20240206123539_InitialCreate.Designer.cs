// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_cinema_challenge.Data;

#nullable disable

namespace api_cinema_challenge.Data.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20240206123539_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api_cinema_challenge.Application.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("date")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5088),
                            Email = "David@email.com",
                            Name = "David",
                            Phone = "60728988"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5120),
                            Email = "Frank@email.com",
                            Name = "Frank",
                            Phone = "77744006"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5125),
                            Email = "Frank@email.com",
                            Name = "Frank",
                            Phone = "58548887"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5129),
                            Email = "Ruben@email.com",
                            Name = "Ruben",
                            Phone = "28438558"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5134),
                            Email = "David@email.com",
                            Name = "David",
                            Phone = "32090007"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5140),
                            Email = "Frank@email.com",
                            Name = "Frank",
                            Phone = "56613342"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5145),
                            Email = "Piotr@email.com",
                            Name = "Piotr",
                            Phone = "32297558"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5149),
                            Email = "Ruben@email.com",
                            Name = "Ruben",
                            Phone = "83332048"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5153),
                            Email = "David@email.com",
                            Name = "David",
                            Phone = "55505102"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5158),
                            Email = "Piotr@email.com",
                            Name = "Piotr",
                            Phone = "24937168"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5162),
                            Email = "Frank@email.com",
                            Name = "Frank",
                            Phone = "64015786"
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Application.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.Property<int>("RuntimeMins")
                        .HasColumnType("integer")
                        .HasColumnName("runtime_mins");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("date")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5220),
                            Description = "A movie about a Policeman that is quite Seethrough",
                            Rating = 1,
                            RuntimeMins = 81,
                            Title = "The Seethrough Policeman"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5351),
                            Description = "A movie about a Leopard that is quite Fast",
                            Rating = 3,
                            RuntimeMins = 166,
                            Title = "The Fast Leopard"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5356),
                            Description = "A movie about a Piper that is quite Amazing",
                            Rating = 0,
                            RuntimeMins = 42,
                            Title = "The Amazing Piper"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5361),
                            Description = "A movie about a Piper that is quite Purple",
                            Rating = 3,
                            RuntimeMins = 195,
                            Title = "The Purple Piper"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5366),
                            Description = "A movie about a Swan that is quite Amazing",
                            Rating = 3,
                            RuntimeMins = 208,
                            Title = "The Amazing Swan"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5370),
                            Description = "A movie about a Phone that is quite Fast",
                            Rating = 0,
                            RuntimeMins = 175,
                            Title = "The Fast Phone"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5375),
                            Description = "A movie about a Piper that is quite Mad",
                            Rating = 0,
                            RuntimeMins = 60,
                            Title = "The Mad Piper"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5379),
                            Description = "A movie about a Leopard that is quite Purple",
                            Rating = 3,
                            RuntimeMins = 85,
                            Title = "The Purple Leopard"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5383),
                            Description = "A movie about a Swan that is quite Round",
                            Rating = 0,
                            RuntimeMins = 89,
                            Title = "The Round Swan"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5388),
                            Description = "A movie about a Leopard that is quite Slow",
                            Rating = 2,
                            RuntimeMins = 87,
                            Title = "The Slow Leopard"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5393),
                            Description = "A movie about a Piper that is quite Amazing",
                            Rating = 1,
                            RuntimeMins = 153,
                            Title = "The Amazing Piper"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5397),
                            Description = "A movie about a Phone that is quite Amazing",
                            Rating = 2,
                            RuntimeMins = 99,
                            Title = "The Amazing Phone"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5401),
                            Description = "A movie about a Swan that is quite Fast",
                            Rating = 1,
                            RuntimeMins = 192,
                            Title = "The Fast Swan"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5435),
                            Description = "A movie about a Swan that is quite Fast",
                            Rating = 1,
                            RuntimeMins = 208,
                            Title = "The Fast Swan"
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Application.Models.Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<int>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    b.Property<DateTime>("StartsAt")
                        .HasColumnType("date")
                        .HasColumnName("starts_at");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("screenings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 3,
                            MovieId = 7,
                            StartsAt = new DateTime(2024, 2, 12, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 1,
                            MovieId = 10,
                            StartsAt = new DateTime(2024, 2, 12, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 2,
                            MovieId = 4,
                            StartsAt = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 2,
                            MovieId = 3,
                            StartsAt = new DateTime(2024, 2, 12, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 2,
                            MovieId = 2,
                            StartsAt = new DateTime(2024, 2, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 1,
                            MovieId = 1,
                            StartsAt = new DateTime(2024, 2, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Application.Models.Ticket", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<int>("ScreeningId")
                        .HasColumnType("integer")
                        .HasColumnName("screening_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date")
                        .HasColumnName("created_at");

                    b.Property<int>("NumSeats")
                        .HasColumnType("integer")
                        .HasColumnName("num_seats");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("date")
                        .HasColumnName("updated_at");

                    b.HasKey("CustomerId", "ScreeningId");

                    b.HasIndex("ScreeningId");

                    b.ToTable("tickets");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            ScreeningId = 3,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5550),
                            NumSeats = 4
                        },
                        new
                        {
                            CustomerId = 3,
                            ScreeningId = 4,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5553),
                            NumSeats = 2
                        },
                        new
                        {
                            CustomerId = 2,
                            ScreeningId = 1,
                            CreatedAt = new DateTime(2024, 2, 6, 13, 35, 38, 918, DateTimeKind.Local).AddTicks(5555),
                            NumSeats = 1
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Application.Models.Screening", b =>
                {
                    b.HasOne("api_cinema_challenge.Application.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("api_cinema_challenge.Application.Models.Ticket", b =>
                {
                    b.HasOne("api_cinema_challenge.Application.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_cinema_challenge.Application.Models.Screening", null)
                        .WithMany()
                        .HasForeignKey("ScreeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
